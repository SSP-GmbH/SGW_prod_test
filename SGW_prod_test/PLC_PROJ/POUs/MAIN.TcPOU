<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{cf7a1f3b-01b2-485c-af22-ebbbf99dfab4}" SpecialFunc="None">
    <Declaration><![CDATA[(* POUs/MAIN *)

PROGRAM MAIN
VAR
  // ─── 1 Hz square-wave state ───────────────────────────────
  tonOn  : TON := (PT := T#1S);
  tonOff : TON := (PT := T#1S);
  blink  : BOOL := FALSE;

  // ─── ComBuffer structs ───────────────────────────────────
  TxBuf  : ComBuffer;
  RxBuf  : ComBuffer;
  fbPort : SerialLineControl;
  fbSend : SendString;
  txBusy : BOOL;
  txStr  : STRING(64);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// — one‐time ComBuffer init —
IF NOT fbPort.initialized THEN
  TxBuf.RdIdx    := 0; TxBuf.WrIdx    := 0; TxBuf.Count    := 0;
  TxBuf.FreeByte := SIZEOF(TxBuf.Buffer);
  TxBuf.Error    := 0; TxBuf.blocked  := FALSE;

  RxBuf.RdIdx    := 0; RxBuf.WrIdx    := 0; RxBuf.Count    := 0;
  RxBuf.FreeByte := SIZEOF(RxBuf.Buffer);
  RxBuf.Error    := 0; RxBuf.blocked  := FALSE;
END_IF

// — call the port FB every scan in PC‐COM‐PORT mode —
fbPort(
  Mode      := SERIALLINEMODE_PC_COM_PORT,
  pComIn    := ADR(GLOBAL_VARS.COM1_InAll),
  pComOut   := ADR(GLOBAL_VARS.COM1_OutAll),
  SizeComIn := 64,
  TxBuffer  := TxBuf,
  RxBuffer  := RxBuf
);

// 3) 1 Hz via two TONs
tonOn(  IN := NOT blink );
tonOff( IN :=  blink    );

// 4) OFF→ON: send 15.00 V
IF NOT blink AND tonOn.Q THEN
  blink := TRUE;
  txStr  := 'AVSET1:15.00';
  fbSend(
    SendString := txStr,
    TxBuffer   := TxBuf,
    Busy       => txBusy
  );
END_IF

// 5) ON→OFF: send 5.00 V
IF blink AND tonOff.Q THEN
  blink := FALSE;
  txStr  := 'BVSET1:5.00';
  fbSend(
    SendString := txStr,
    TxBuffer   := TxBuf,
    Busy       => txBusy
  );
END_IF

// 6) Map your blink into the EL2008s
GLOBAL_VARS.DO_EL2008_0 := blink;
GLOBAL_VARS.DO_EL2008_1 := NOT blink;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>