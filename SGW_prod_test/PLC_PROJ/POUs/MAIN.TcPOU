<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{cf7a1f3b-01b2-485c-af22-ebbbf99dfab4}" SpecialFunc="None">
    <Declaration><![CDATA[(* POUs/MAIN *)

PROGRAM MAIN
VAR
	CanRx          : CAN_IFACE_QUEUE;
	CanTx          : CAN_IFACE_QUEUE;
	i              : INT;
	slotIn         : CAN_MsgSlot;
	slotOut        : CAN_MsgSlot;
	msgIn          : CAN_MSG;
	msgOut         : CAN_MSG;

	rawVoltIn      : UINT := 0;
	rawVoltOut     : UINT := 0;
	rawCurrentIn   : UINT := 0;
	rawCurrentOut  : UINT := 0;

	physVoltIn     : REAL := 0.0;
	physVoltOut    : REAL := 0.0;
	physCurrentIn  : REAL := 0.0;
	physCurrentOut : REAL := 0.0;

	FB_PSU         : FB_PowerSupply;
	initDone       : BOOL := FALSE;
	
	JUST_PSU : BOOL := TRUE;
	SOME_FLAG : BOOL := TRUE;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF NOT initDone THEN
  FB_PSU.Init();
  initDone := TRUE;
END_IF

IF JUST_PSU AND SOME_FLAG THEN

	FB_PSU.SetVoltage(volts := physVoltIn);
	SOME_FLAG := FALSE;

ELSE
	// 1) Read the hardware Rx shadow
	CanRx := EL6751_GVLs.gCanIf_RxMsg;
	
	// 2) Process all received messages
	IF CanRx.NoOfMessages > 0 THEN
		// Prepare Tx queue index
		FOR i := 0 TO CanRx.NoOfMessages - 1 DO
	
			slotIn := CanRx.Messages[i];
			msgIn := F_ParseSlot(slot := slotIn);
	
			// Route by ID
			CASE msgIn.ID OF
	
			16#200:  // Set voltage command
				IF msgIn.DLC = 2 THEN // Expect DLC = 2
					rawVoltIn := BytesToUInt16(highByte := msgIn.DATA[1], lowByte := msgIn.DATA[0]);
					physVoltIn := RawToVoltage(raw := rawVoltIn);
					FB_PSU.SetVoltage(volts := physVoltIn);
				END_IF;

			16#300:  // Set current command
				IF msgIn.DLC = 2 THEN
					rawCurrentIn := SHL(TO_UINT(msgIn.DATA[0]), 8) OR TO_UINT(msgIn.DATA[1]);
					physCurrentIn := RawToCurrent(raw := rawCurrentIn);
					FB_PSU.SetCurrent(amps := physCurrentIn);
				END_IF;
	
		  // You could also handle GetVoltage (0x210) or GetCurrent (0x310)
		  // by reading back right away and sending feedback
		END_CASE;
	  END_FOR
	END_IF

END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>