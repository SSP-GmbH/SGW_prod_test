<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{cf7a1f3b-01b2-485c-af22-ebbbf99dfab4}" SpecialFunc="None">
    <Declaration><![CDATA[(* POUs/MAIN *)

PROGRAM MAIN
VAR
	cNetId : T_AmsNetId := '5.156.240.208.7.1';   // EL6751 “CAN interface”
	cPort  : T_AmsPort  := 200;                   // fixed AoE port


    aFilter  : ARRAY[0..9] OF BYTE := [
		16#01,16#00,      // one range entry
		16#00,16#00,      // start ID = 0x000
		0,0,              // reserved
		16#00,16#05,      // end   ID = 0x500
		0,0               // reserved
	];
	fbFilter : ADSWRITE;
    filtBusy : BOOL;
    filtErr  : BOOL;
    filtOK   : BOOL := FALSE;


	rxBuf     : ARRAY[0..(50*11-1)] OF BYTE;     // 640 bytes = 50 frames × 11 B
    fbRead    : ADSREADEX;
    rdBusy    : BOOL;
    rdCnt     : UDINT;


    messages  : ARRAY[0..49] OF CAN_MSG;         // parsed output
    nMsg, i   : INT;
    base      : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* ---- arm filter once ---- *)
IF NOT filtOK THEN
    fbFilter(
		NETID    := cNetId,
		PORT     := cPort,
		IDXGRP   := 16#F923,
		IDXOFFS  := 0,
		LEN      := SIZEOF(aFilter),
		SRCADDR  := ADR(aFilter),
		WRITE    := TRUE,
		TMOUT    := T#2000MS,
		BUSY     => filtBusy,
		ERR      => filtErr
	);
    IF NOT filtBusy AND NOT filtErr THEN
        filtOK := TRUE;
    END_IF
END_IF

fbRead(
    NETID    := cNetId,
	PORT     := cPort,
    IDXGRP   := 16#F921,
	IDXOFFS  := 0,
    LEN      := SIZEOF(rxBuf),
	DESTADDR := ADR(rxBuf),
    READ     := (NOT rdBusy) AND filtOK,
    TMOUT    := T#500MS,
    BUSY     => rdBusy,
	COUNT_R  => rdCnt
);

(* ---- parse every 11-byte frame ---- *)
IF (NOT rdBusy) AND (rdCnt >= 11) THEN
    nMsg := 0;
    WHILE (nMsg < 50) AND ((TO_UDINT(nMsg)*11+11) <= rdCnt) DO
        base := nMsg*11;
        messages[nMsg].ID := TO_UDINT(rxBuf[base]) OR SHL((TO_UDINT(rxBuf[base+1]) AND 16#07),8);
        messages[nMsg].DLC := rxBuf[base+2];
        FOR i := 0 TO messages[nMsg].DLC-1 DO
            messages[nMsg].DATA[i] := rxBuf[base+3+i];
        END_FOR;
        nMsg := nMsg+1;
    END_WHILE;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>